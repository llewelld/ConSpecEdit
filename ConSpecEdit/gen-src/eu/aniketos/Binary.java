//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 02:41:26 AM BST 
//


package eu.aniketos;

import java.math.BigInteger;
import java.util.List;
import java.util.Vector;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for binary complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="binary">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{}expType" maxOccurs="2" minOccurs="2"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "binary", propOrder = {
    "expType"
})
public class Binary {

    @XmlElementRefs({
        @XmlElementRef(name = "or", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "not", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "notequal", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "morethan", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "mul", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "sum", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "append", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "mod", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "invocation", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "sconst", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "dif", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "bconst", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "morequalthan", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "lessthan", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "and", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "identifier", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "lessequalthan", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "equal", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "iconst", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> expType = new Vector<JAXBElement<?>>();

    /**
     * Gets the value of the expType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the expType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExpType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Unary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link JAXBElement }{@code <}{@link InvocationType }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Boolean }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link Binary }{@code >}
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link JAXBElement }{@code <}{@link BigInteger }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getExpType() {
        if (expType == null) {
            expType = new Vector<JAXBElement<?>>();
        }
        return this.expType;
    }

}
