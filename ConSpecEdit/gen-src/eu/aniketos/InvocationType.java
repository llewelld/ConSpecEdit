//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 02:41:26 AM BST 
//


package eu.aniketos;

import java.math.BigInteger;
import java.util.List;
import java.util.Vector;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for invocationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="invocationType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="identifier" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="2"/>
 *         &lt;element name="argument" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;group ref="{}expType"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "invocationType", propOrder = {
    "identifier",
    "argument"
})
public class InvocationType {

    @XmlElement(required = true)
    protected List<String> identifier = new Vector<String>();
    protected List<InvocationType.Argument> argument = new Vector<InvocationType.Argument>();

    /**
     * Gets the value of the identifier property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the identifier property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentifier().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIdentifier() {
        if (identifier == null) {
            identifier = new Vector<String>();
        }
        return this.identifier;
    }

    /**
     * Gets the value of the argument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the argument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getArgument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InvocationType.Argument }
     * 
     * 
     */
    public List<InvocationType.Argument> getArgument() {
        if (argument == null) {
            argument = new Vector<InvocationType.Argument>();
        }
        return this.argument;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;group ref="{}expType"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "expType"
    })
    public static class Argument {

        @XmlElementRefs({
            @XmlElementRef(name = "append", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "or", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "dif", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "iconst", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "sum", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "bconst", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "lessthan", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "invocation", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "and", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "lessequalthan", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "morequalthan", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "mul", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "identifier", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "sconst", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "notequal", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "equal", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "morethan", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "not", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "mod", type = JAXBElement.class, required = false)
        })
        protected JAXBElement<?> expType;

        /**
         * Gets the value of the expType property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link BigInteger }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Boolean }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link InvocationType }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Unary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     
         */
        public JAXBElement<?> getExpType() {
            return expType;
        }

        /**
         * Sets the value of the expType property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link BigInteger }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Boolean }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link InvocationType }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Unary }{@code >}
         *     {@link JAXBElement }{@code <}{@link Binary }{@code >}
         *     
         */
        public void setExpType(JAXBElement<?> value) {
            this.expType = value;
        }

    }

}
